---
title: Installing and Configuring OverOps Reliability Platform for PCF
owner: Partners
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure OverOps Reliability Platform for PCF.

To install the OverOps Reliability Platform for PCF file on the Ops Manager Installation Dashboard, do the following:

1. Download the product file for **OverOps Reliability Platform for PCF** from Pivotal Network.

1. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to upload the product file. 

1. Under the **Import a Product** button, click **+** next to the version number of **OverOps Reliability Platform for PCF** file. 
This adds the tile to your staging area.

1. Once the Tile is staged there maybe be a prompt to enter a stemcell. If there is the reccomended stemcell used in development is the Ubuntu Xenial [Stemcell](https://network.pivotal.io/products/stemcells-ubuntu-xenial/)

1. Click the newly added **OverOps Reliability Platform for PCF** tile.

1.Click Assign AZ's and Networks button and fill out.

![AZ's Configuration](screenshots/AZ_Network_ex.png) 

1. In the **OverOps Collector** section enter the **OverOps Backend URL**, the **OverOps Installation Key**, and your **Server Name**. If you are unsure of these values, please look at the OverOps [Documentation](https://doc.overops.com/docs/collector-properties).

![OverOps filled out form](screenshot/OverOpsCollector_form.png)

1. Click **Save**.

1. Return to the Ops Manager Installation Dashboard and click **Apply changes** to install OverOps Reliability Platform for PCF tile.

##<a id='connect'></a> Connect OverOps Collector to Agent

1. Ensure that your application is deployed and ensure it is using the [Java Buildpack](https://github.com/cloudfoundry/java-buildpack.git).

1. [Create a TCP shared domain](https://docs.cloudfoundry.org/devguide/deploy-apps/routes-domains.html#-create-a-shared-domain) if you have not already created one.

     ```
     cf create-shared-domain tcp.example.com --router-group default-tcp
      ```

1. [Map a route](https://docs.cloudfoundry.org/devguide/deploy-apps/routes-domains.html#-manually-map-a-route) to the OverOps Collector that was deployed during your tile upload.

     ```
     cf map-route overops-collector tcp.example.com --random-port
     ```

     Using `--random-port` instructs Cloud Foundry to pick a port for your route. To set a specific port use `--port 1234`.

1. [Create a user-provided service](https://docs.cloudfoundry.org/devguide/services/user-provided.html) to enable the Takipi Agent Framework and deliver the Collector hostname and port to your application.

      ```
      cf cups takipi-service -t "takipi" -p '{"collector_host":"tcp.example.com", "collector_port":"1234"}'
      ```

      ![Service configuration](screenshots/ups_example_config.png)

1. Bind `takipi-service` to your application.

      ```
      cf bind-service app_name takipi-service
      ```

1. Restage your application.

      ```
      cf restage app_name
      ```

1. Once the service is bound, confirm connectivity with the OverOps Analysis Server.
![OverOps is connected](screenshots/connected_app_to_collector.png)
